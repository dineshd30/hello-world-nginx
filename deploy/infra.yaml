Description: Hello World VPC

Parameters:
  Name:
    Type: String
    Default: "hello-world-infra"

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.16.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${Name}-vpc1

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${Name}-vpc1-igw

  InternetGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteTableWeb:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Name}-vpc1-rt-web

  RouteTableWebIG:
    Type: "AWS::EC2::Route"
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId:
        Ref: RouteTableWeb
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId:
        Ref: InternetGateway

  RouteTableAssociationWebA:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref SubnetWebA
      RouteTableId:
        Ref: RouteTableWeb

  RouteTableAssociationWebB:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref SubnetWebB
      RouteTableId:
        Ref: RouteTableWeb

  SubnetAppA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: 10.16.32.0/20
      Tags:
        - Key: Name
          Value: sn-app-A

  SubnetAppB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: 10.16.96.0/20
      Tags:
        - Key: Name
          Value: sn-app-B

  SubnetWebA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: 10.16.48.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: sn-web-A

  SubnetWebB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: 10.16.112.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: sn-web-B

  NatGatewayA:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIPA.AllocationId
      SubnetId: !Ref SubnetWebA

  NatGatewayB:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIPB.AllocationId
      SubnetId: !Ref SubnetWebB

  EIPA:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  EIPB:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  PrivateRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PrivateRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PrivateRouteA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayA

  PrivateRouteB:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableB
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayB

  PrivateSubnetRouteTableAAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetAppA
      RouteTableId: !Ref PrivateRouteTableA

  PrivateSubnetRouteTableBAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetAppB
      RouteTableId: !Ref PrivateRouteTableB

Outputs:
  VpcId:
    Description: ID of VPC
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-VpcId"

  SubnetWebAID:
    Description: ID of the public subnet web A
    Value: !Ref SubnetWebA
    Export:
      Name: !Sub "${AWS::StackName}-SubnetWebAID"

  SubnetWebBID:
    Description: ID of the public subnet web B
    Value: !Ref SubnetWebB
    Export:
      Name: !Sub "${AWS::StackName}-SubnetWebBID"

  SubnetAppAID:
    Description: ID of the public subnet app A
    Value: !Ref SubnetAppA
    Export:
      Name: !Sub "${AWS::StackName}-SubnetAppAID"

  SubnetAppBID:
    Description: ID of the public subnet app B
    Value: !Ref SubnetAppB
    Export:
      Name: !Sub "${AWS::StackName}-SubnetAppBID"
